//
// +-------------------------------------------------------------------------+
// |     This file is generated by The Interactive Disassembler (IDA)        |
// |     Copyright (c) 2007 by DataRescue sa/nv, <ida@datarescue.com>        |
// | Licensed to: Paul Ashton - Blue Lane Technologies (1-user Advanced 03/2006) |
// +-------------------------------------------------------------------------+
//
//
//      This file contains the user-defined type definitions.
//      To use it press F2 in IDA and enter the name of this file.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void) {
        Enums();                // enumerations
        Structures();           // structure types
	LowVoids(0x0);
	HighVoids(0xFFFFFFF0);
}

static Enums_0(id) {

	id = AddEnum(-1,"Traps",0x1100000);
	AddConstEx(id,"TRAP_SOUNDCOM",	0X0,	-1);
	AddConstEx(id,"TRAP_CHECKFLAG",	0X1,	-1);
	AddConstEx(id,"TRAP_SETFLAG",	0X2,	-1);
	AddConstEx(id,"TRAP_CLEARFLAG",	0X3,	-1);
	AddConstEx(id,"TRAP_TEXTBOX",	0X5,	-1);
	AddConstEx(id,"TRAP_MAPSCRIPT",	0X6,	-1);
	AddConstEx(id,"TRAP_VINTFUNCTIONS",	0X9,	-1);
	id = AddEnum(-1,"Combatant",0x100000);
	AddConstEx(id,"COM_ALLY_START",	0X0,	-1);
	AddConstEx(id,"COM_POS_IDX",	0X0,	-1);
	AddConstEx(id,"COM_POS_TYPE",	0X7,	-1);
	AddConstEx(id,"COM_NUM_ALLIES",	0X1D,	-1);
	AddConstEx(id,"COM_NUM_ENEMIES",	0X1F,	-1);
	AddConstEx(id,"COM_IDX_REALMASK",	0X3F,	-1);
	AddConstEx(id,"COM_TYPE_REALMASK",	0X80,	-1);
	AddConstEx(id,"COM_ENEMY_START",	0X80,	-1);
	id = AddEnum(-1,"Combatant_Idx",0x100000);
	AddConstEx(id,"COM_IDX_SIZE",	0X6,	-1);
	AddConstEx(id,"COM_IDX_MASK",	0X3F,	-1);
	id = AddEnum(-1,"Combatant_Type",0x100000);
	AddConstEx(id,"COM_TYPE_MASK",	0X1,	-1);
	AddConstEx(id,"COM_TYPE_SIZE",	0X1,	-1);
	id = AddEnum(-1,"Combatant_Offsets",0x100000);
	id = AddEnum(-1,"Combatant_Status_Bitfield",0x100000);
	AddConstEx(id,"COM_STATUS_MASK_MUDDLE2",	0X8,	-1);
	AddConstEx(id,"COM_STATUS_MASK_MUDDLE",	0X30,	-1);
	id = AddEnum(-1,"CharDef",0x100000);
	AddConstEx(id,"MAX_CHAR_IDX",	0X1D,	-1);
	id = AddEnum(-1,"CharEntry",0x100000);
	AddConstEx(id,"CHAR_ITEMSLOTS",	0X4,	-1);
	AddConstEx(id,"CHAR_SPELLSLOTS",	0X4,	-1);
	AddConstEx(id,"CHAR_NAMELENGTH",	0XA,	-1);
	id = AddEnum(-1,"CharEntry_Offsets",0x100000);
	AddConstEx(id,"CHAR_OFFSET_NAME",	0X0,	-1);
	AddConstEx(id,"CHAR_OFFSET_CLASS_IDX",	0XA,	-1);
	AddConstEx(id,"CHAR_OFFSET_ITEMS",	0X20,	-1);
	AddConstEx(id,"CHAR_OFFSET_STATUS",	0X2C,	-1);
	id = AddEnum(-1,"ClassDef",0x100000);
	AddConstEx(id,"CLASSIDX_BRGN",	0X16,	-1);
	id = AddEnum(-1,"Controller_Input_A_Bitfield",0x100000);
	AddConstEx(id,"INPUT_A_UP_BIT",	0X0,	-1);
	AddConstEx(id,"INPUT_A_DOWN_BIT",	0X1,	-1);
	AddConstEx(id,"INPUT_A_LEFT_BIT",	0X2,	-1);
	AddConstEx(id,"INPUT_A_RIGHT_BIT",	0X3,	-1);
	AddConstEx(id,"INPUT_A_B_BIT",	0X4,	-1);
	AddConstEx(id,"INPUT_A_C_BIT",	0X5,	-1);
	AddConstEx(id,"INPUT_A_A_BIT",	0X6,	-1);
	AddConstEx(id,"INPUT_A_START_BIT",	0X7,	-1);
	id = AddEnum(-1,"ItemDef",0x100000);
	AddConstEx(id,"ITEMDEF_OFFSET_MAXRANGE",	0X4,	-1);
	AddConstEx(id,"ITEMDEF_OFFSET_MINRANGE",	0X5,	-1);
	AddConstEx(id,"ITEMDEF_OFFSET_TYPE",	0X8,	-1);
	AddConstEx(id,"ITEMDEF_OFFSET_SPELL",	0X9,	-1);
	AddConstEx(id,"MAX_ITEM_IDX",	0X7F,	-1);
	id = AddEnum(-1,"ItemDef_Idx",0x100000);
	AddConstEx(id,"ITEMIDX_HEALING_RAIN",	0X8,	-1);
	AddConstEx(id,"ITEMIDX_POWER_RING",	0X13,	-1);
	AddConstEx(id,"ITEMIDX_PROTECT_RING",	0X14,	-1);
	AddConstEx(id,"ITEMIDX_QUICK_RING",	0X15,	-1);
	AddConstEx(id,"ITEMIDX_RUNNING_RING",	0X16,	-1);
	AddConstEx(id,"ITEMIDX_NOTHING",	0X7F,	-1);
	id = AddEnum(-1,"ItemDef_Type_Bitfield",0x100000);
	AddConstEx(id,"ITEMTYPE_BIT_WEAPON",	0X1,	-1);
	AddConstEx(id,"ITEMTYPE_MASK_WEAPON",	0X2,	-1);
	AddConstEx(id,"ITEMTYPE_BIT_RING",	0X2,	-1);
	AddConstEx(id,"ITEMTYPE_BIT_RARE",	0X3,	-1);
	AddConstEx(id,"ITEMTYPE_MASK_RING",	0X4,	-1);
	AddConstEx(id,"ITEMTYPE_BIT_CURSED",	0X6,	-1);
	id = AddEnum(-1,"ItemEntry",0x100000);
	AddConstEx(id,"ITEM_IDX_REALMASK",	0X7F,	-1);
	AddConstEx(id,"ITEM_MASK",	0X807F,	-1);
	id = AddEnum(-1,"ItemEntry_Idx",0x100000);
	AddConstEx(id,"ITEM_IDX_SIZE",	0X7,	-1);
	AddConstEx(id,"ITEM_IDX_MASK",	0X7F,	-1);
	id = AddEnum(-1,"ItemEntry_Props",0x100000);
	AddConstEx(id,"ITEM_BIT_EQUIPPED",	0X7,	-1);
	AddConstEx(id,"ITEM_BIT_ENEMYUSE",	0XD,	-1);
	AddConstEx(id,"ITEM_BIT_BROKEN",	0XF,	-1);
	AddConstEx(id,"ITEM_MASK_IDX",	0X7F,	-1);
	id = AddEnum(-1,"MapDef",0x100000);
	id = AddEnum(-1,"SoundCommands",0x1100000);
	AddConstEx(id,"SOUND_COMMAND_INIT_DRIVER",	0X20,	-1);
	AddConstEx(id,"SOUND_COMMAND_WAIT_MUSIC_END",	0XF0,	-1);
	AddConstEx(id,"SOUND_COMMAND_PLAY_PREVIOUS_MUSIC",	0XFB,	-1);
	AddConstEx(id,"SOUND_COMMAND_FADE_OUT",	0XFD,	-1);
	AddConstEx(id,"SOUND_COMMAND_GET_D0_PARAMETER",	0XFFFF,	-1);
	id = AddEnum(-1,"Music",0x1100000);
	AddConstEx(id,"MUSIC_NOTHING",	0X0,	-1);
	AddConstEx(id,"MUSIC_MAIN_THEME",	0X1,	-1);
	AddConstEx(id,"MUSIC_ATTACK",	0X2,	-1);
	AddConstEx(id,"MUSIC_PROMOTED_ATTACK",	0X3,	-1);
	AddConstEx(id,"MUSIC_PROMOTED_ATTACK_LOOP",	0X4,	-1);
	AddConstEx(id,"MUSIC_ENEMY_ATTACK",	0X5,	-1);
	AddConstEx(id,"MUSIC_BOSS_ATTACK",	0X6,	-1);
	AddConstEx(id,"MUSIC_ZEON_ATTACK",	0X7,	-1);
	AddConstEx(id,"MUSIC_TOWN",	0X8,	-1);
	AddConstEx(id,"MUSIC_INTRO",	0X9,	-1);
	AddConstEx(id,"MUSIC_WITCH",	0XA,	-1);
	AddConstEx(id,"MUSIC_SUSPEND",	0XB,	-1);
	AddConstEx(id,"MUSIC_SAD_THEME_2",	0XC,	-1);
	AddConstEx(id,"MUSIC_ELVEN_TOWN",	0XD,	-1);
	AddConstEx(id,"MUSIC_MITULA",	0XE,	-1);
	AddConstEx(id,"MUSIC_SAD_THEME_3",	0XF,	-1);
	AddConstEx(id,"MUSIC_SAD_THEME_1",	0X10,	-1);
	AddConstEx(id,"MUSIC_PIANO_THEME",	0X11,	-1);
	AddConstEx(id,"MUSIC_CORRUPTED_SAVE",	0X12,	-1);
	AddConstEx(id,"MUSIC_JOIN",	0X13,	-1);
	AddConstEx(id,"MUSIC_SAD_JOIN",	0X14,	-1);
	AddConstEx(id,"MUSIC_SAVE",	0X15,	-1);
	AddConstEx(id,"MUSIC_CURE",	0X16,	-1);
	AddConstEx(id,"MUSIC_UNUSED_REVIVE",	0X17,	-1);
	AddConstEx(id,"MUSIC_REVIVE",	0X18,	-1);
	AddConstEx(id,"MUSIC_PROMOTION",	0X19,	-1);
	AddConstEx(id,"MUSIC_CURSED_ITEM",	0X1A,	-1);
	AddConstEx(id,"MUSIC_ITEM",	0X1B,	-1);
	AddConstEx(id,"MUSIC_TITLE",	0X1C,	-1);
	AddConstEx(id,"MUSIC_BATTLE_THEME_3",	0X21,	-1);
	AddConstEx(id,"MUSIC_BATTLE_THEME_1",	0X22,	-1);
	AddConstEx(id,"MUSIC_SHRINE",	0X23,	-1);
	AddConstEx(id,"MUSIC_FINAL_BATTLE",	0X24,	-1);
	AddConstEx(id,"MUSIC_MITHRIL_DIGGERS",	0X25,	-1);
	AddConstEx(id,"MUSIC_CASTLE",	0X26,	-1);
	AddConstEx(id,"MUSIC_HEADQUARTERS",	0X27,	-1);
	AddConstEx(id,"MUSIC_MITULA_SHRINE",	0X28,	-1);
	AddConstEx(id,"MUSIC_ENDING",	0X29,	-1);
	id = AddEnum(-1,"Sfx",0x1100000);
	AddConstEx(id,"SFX_MENU_SWITCH",	0X41,	-1);
	AddConstEx(id,"SFX_MENU_SELECTION",	0X42,	-1);
	AddConstEx(id,"SFX_VALIDATION",	0X43,	-1);
	AddConstEx(id,"SFX_REFUSAL",	0X44,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_1",	0X45,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_2",	0X46,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_3",	0X47,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_4",	0X48,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_5",	0X49,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_6",	0X4A,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_7",	0X4B,	-1);
	AddConstEx(id,"SFX_DIALOG_BLEEP_8",	0X4C,	-1);
	AddConstEx(id,"SFX_SPELL_CAST",	0X4D,	-1);
	AddConstEx(id,"SFX_DOOR_OPEN_HIGH_PITCH",	0X4E,	-1);
	AddConstEx(id,"SFX_WALKING",	0X4F,	-1);
	AddConstEx(id,"SFX_UNUSED_FROM_LANDSTALKER",	0X50,	-1);
	AddConstEx(id,"SFX_LIGHTNING_1",	0X51,	-1);
	AddConstEx(id,"SFX_LIGHTNING_2",	0X52,	-1);
	AddConstEx(id,"SFX_HIT_1",	0X53,	-1);
	AddConstEx(id,"SFX_HIT_2",	0X54,	-1);
	AddConstEx(id,"SFX_BLAST",	0X55,	-1);
	AddConstEx(id,"SFX_SWORDS_HIT",	0X56,	-1);
	AddConstEx(id,"SFX_JUMP",	0X57,	-1);
	AddConstEx(id,"SFX_FALLING",	0X58,	-1);
	AddConstEx(id,"SFX_WARP",	0X59,	-1);
	AddConstEx(id,"SFX_CHIRRUP_SANDALS",	0X5A,	-1);
	AddConstEx(id,"SFX_MONSTER_DIALOG_BLEEP",	0X5B,	-1);
	AddConstEx(id,"SFX_DOOR_OPEN",	0X5C,	-1);
	AddConstEx(id,"SFX_BIG_DOOR_RUMBLE",	0X5D,	-1);
	AddConstEx(id,"SFX_MONSTER_SCREAM",	0X5E,	-1);
	AddConstEx(id,"SFX_BUUBOBI",	0X5F,	-1);
	AddConstEx(id,"SFX_SECRET_PATH_ROCK",	0X60,	-1);
	AddConstEx(id,"SFX_PSH",	0X61,	-1);
	AddConstEx(id,"SFX_PSHHH",	0X62,	-1);
	AddConstEx(id,"SFX_BLOAB",	0X63,	-1);
	AddConstEx(id,"SFX_BLO",	0X64,	-1);
	AddConstEx(id,"SFX_LANDSTALKER_ITEM",	0X65,	-1);
	AddConstEx(id,"SFX_LEVEL_UP",	0X66,	-1);
	AddConstEx(id,"SFX_PRISM_LASER_LOADING",	0X67,	-1);
	AddConstEx(id,"SFX_LANDSTALKER_SWITCH",	0X68,	-1);
	AddConstEx(id,"SFX_SFCD_STATUES",	0X69,	-1);
	AddConstEx(id,"SFX_DESOUL",	0X6A,	-1);
	AddConstEx(id,"SFX_SITD_HOWL",	0X6B,	-1);
	AddConstEx(id,"SFX_PRISM_LASER_FIRING",	0X6C,	-1);
	AddConstEx(id,"SFX_BOOST",	0X6D,	-1);
	AddConstEx(id,"SFX_DESOUL_HOVERING",	0X6E,	-1);
	AddConstEx(id,"SFX_PRISM_LASER_CUTSCENE_FIRING",	0X6F,	-1);
	AddConstEx(id,"SFX_TAROS_DIALOG_BLEEP",	0X70,	-1);
	AddConstEx(id,"SFX_HEALING",	0X71,	-1);
	AddConstEx(id,"SFX_BLAST_SPELL",	0X72,	-1);
	AddConstEx(id,"SFX_WING_FLAP",	0X73,	-1);
	AddConstEx(id,"SFX_BATTLEFIELD_DEATH",	0X74,	-1);
	AddConstEx(id,"SFX_DEMON_BREATH",	0X75,	-1);
	AddConstEx(id,"SFX_INTRO_LIGHTNING",	0X76,	-1);
	AddConstEx(id,"SFX_BOLT_SPELL",	0X77,	-1);
	AddConstEx(id,"SFX_TINKLING",	0X78,	-1);
	id = AddEnum(-1,"SpellDef",0x100000);
	AddConstEx(id,"SPELLDEF_OFFSET_COST",	0X1,	-1);
	AddConstEx(id,"SPELLDEF_OFFSET_PROPS",	0X3,	-1);
	AddConstEx(id,"SPELLDEF_OFFSET_MAXRANGE",	0X4,	-1);
	AddConstEx(id,"SPELLDEF_OFFSET_MINRANGE",	0X5,	-1);
	AddConstEx(id,"SPELLDEF_OFFSET_RADIUS",	0X6,	-1);
	AddConstEx(id,"MAX_SPELL_IDX",	0X3F,	-1);
	id = AddEnum(-1,"SpellDef_Props",0x100000);
	AddConstEx(id,"SPELLDEF_TYPE_ATTACK",	0X0,	-1);
	AddConstEx(id,"SPELLDEF_TYPE_HEAL",	0X1,	-1);
	AddConstEx(id,"SPELLDEF_TYPE_STATUS",	0X2,	-1);
	AddConstEx(id,"SPELLDEF_PROPS_TYPE_MASK",	0X3,	-1);
	id = AddEnum(-1,"SpellDef_Idx",0x100000);
	AddConstEx(id,"SPELLIDX_BLAZE",	0XB,	-1);
	AddConstEx(id,"SPELLIDX_FREEZE",	0XC,	-1);
	AddConstEx(id,"SPELLIDX_BOLT",	0XD,	-1);
	AddConstEx(id,"SPELLIDX_BLAST",	0XE,	-1);
	AddConstEx(id,"SPELLIDX_KATON",	0X1B,	-1);
	AddConstEx(id,"SPELLIDX_RAIJIN",	0X1C,	-1);
	AddConstEx(id,"SPELLIDX_NOTHING",	0X3F,	-1);
	id = AddEnum(-1,"SpellEntry",0x100000);
	AddConstEx(id,"SPELL_IDX_POS",	0X0,	-1);
	AddConstEx(id,"SPELL_LV_POS",	0X6,	-1);
	AddConstEx(id,"SPELL_IDX_REALMASK",	0X3F,	-1);
	AddConstEx(id,"SPELL_LV_REALMASK",	0XC0,	-1);
	AddConstEx(id,"SPELL_MASK",	0XFF,	-1);
	id = AddEnum(-1,"SpellEntry_Idx",0x100000);
	AddConstEx(id,"SPELL_IDX_SIZE",	0X6,	-1);
	AddConstEx(id,"SPELL_IDX_MASK",	0X3F,	-1);
	id = AddEnum(-1,"SpellEntry_LV",0x100000);
	AddConstEx(id,"SPELL_LV_SIZE",	0X2,	-1);
	AddConstEx(id,"SPELL_LV_MASK",	0X3,	-1);
	id = AddEnum(-1,"Battle",0x100000);
	AddConstEx(id,"ACTION_ATTACK",	0X0,	-1);
	AddConstEx(id,"ACTION_SPELL",	0X1,	-1);
	AddConstEx(id,"ACTION_ITEM",	0X2,	-1);
	AddConstEx(id,"MAX_BTL_IDX",	0X2C,	-1);
	id = AddEnum(-1,"Battle_Cutscene",0x100000);
	AddConstEx(id,"BTLANIM_ATTACK",	0X0,	-1);
	AddConstEx(id,"BTLANIM_DODGE",	0X1,	-1);
	AddConstEx(id,"BTLANIM_EFFECT",	0X2,	-1);
	AddConstEx(id,"BTLANIM_RANGED",	0X6,	-1);
	id = AddEnum(-1,"Battle_Cutscene_Stack",0x100000);
	AddConstEx(id,"BCSTACK_CUTOFF",	0X1,	-1);
	AddConstEx(id,"BCSTACK_COUNTER",	0XC,	-1);
	AddConstEx(id,"BCSTACK_DBGCOUNTER",	0X14,	-1);
	id = AddEnum(-1,"Def_Lengths",0x100000);
	AddConstEx(id,"SIZE_ITEM",	0X2,	-1);
	AddConstEx(id,"SIZE_ITEMDEF",	0X10,	-1);
	id = AddEnum(-1,"Flags",0x100000);
	AddConstEx(id,"FLAG_BATTLE0",	0X190,	-1);
	id = AddEnum(-1,"Codes",0x100000);
	AddConstEx(id,"CODE_NOTHING_BYTE",	0XFF,	-1);
	AddConstEx(id,"CODE_NOTHING_WORD",	0XFFFF,	-1);
	id = AddEnum(-1,"Text_Index",0x100000);
	AddConstEx(id,"TEXTIDX_HQ",	0X2E,	-1);
	AddConstEx(id,"TEXTIDX_CARAVANDESC_ITEMISFOR",	0X60,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
	id = Enums_0(id);
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
}

// End of file.
